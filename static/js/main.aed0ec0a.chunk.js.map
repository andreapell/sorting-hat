{"version":3,"sources":["components/AnswerOption.js","components/Question.js","components/Quiz.js","components/Result.js","data/quizQuestions.js","index.js"],"names":["AnswerOption","className","type","name","checked","this","props","answerType","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","answerContent","React","Component","Question","content","Quiz","key","questionId","question","answerOptions","map","Result","result","showHouseColor","quizQuestions","answers","App","state","counter","answersCount","Gryffindor","Slytherin","Ravenclaw","Hufflepuff","handleAnswerSelected","bind","setState","e","setUserAnswer","currentTarget","length","setTimeout","setNextQuestion","setResults","getResults","answersCountKeys","Object","keys","answersCountValues","maxAnswerCount","Math","max","apply","filter","floor","random","questionTotal","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aed0ec0a.chunk.js","sourcesContent":["import React from 'react';\n\nclass AnswerOption extends React.Component {\n  render() {\n    return (\n      <div className=\"answer-option\">\n        <input\n          type=\"radio\"\n          className=\"radioCustomButton\"\n          name=\"radioGroup\"\n          checked={this.props.answerType === this.props.answer}\n          id={this.props.answerType}\n          value={this.props.answerType}\n          disabled={this.props.answer}\n          onChange={this.props.onAnswerSelected}\n        />\n        <label className=\"radioCustomLabel\" htmlFor={this.props.answerType}>\n          {this.props.answerContent}\n        </label>\n      </div>\n    )\n  }\n}\n\nexport default AnswerOption;","import React from 'react';\n\nclass Question extends React.Component {\n  render() {\n    return (\n      <div className=\"question-container\">\n        <h3 className=\"question\">{this.props.content}</h3>\n      </div>\n    )\n  }\n}\n\nexport default Question;","import React from 'react';\nimport AnswerOption from '../components/AnswerOption';\nimport Question from '../components/Question'\nimport './styles/quiz.css'\n\nfunction Quiz(props) {\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.content}\n        answerContent={key.content}\n        answerType={key.type}\n        answer={props.answer}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <div className=\"quiz-container\" key={props.questionId}>\n      <div className=\"question-and-answers\">\n        <Question content={props.question} />\n        <div className=\"answer-options-container\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Quiz;","import React from 'react';\n\nclass Result extends React.Component {\n  showHouseColor() {\n    if (this.props.result === \"Gryffindor\") {\n      return \"gryffindor\"\n    } else if (this.props.result === \"Hufflepuff\") {\n      return \"hufflepuff\"\n    } else if (this.props.result === \"Slytherin\") {\n      return \"slytherin\"\n    } else if (this.props.result === \"Ravenclaw\") {\n      return \"ravenclaw\"\n    }\n  }\n  render() {\n    return (\n      <div className=\"quiz-container\">\n        <div className={`results-container ${this.showHouseColor()}`}>\n          <h2 className=\"title\">\n            {this.props.result}\n          </h2>\n            {this.props.result === \"Gryffindor\" && (\n              <div>\n                <div className=\"house-crest gryffindor-crest\"/>\n                <p className=\"house-description gryffindor-description\">\n                  Gryffindor values courage, bravery, nerve, and chivalry.\n                </p>\n              </div>\n            )}\n            {this.props.result === \"Hufflepuff\" && (\n              <div>\n                <div className=\"house-crest hufflepuff-crest\"/>\n                <p className=\"house-description hufflepuff-description\">\n                  Hufflepuff values hard work, patience, justice, and loyalty.\n                </p>\n              </div>\n            )}\n            {this.props.result === \"Ravenclaw\" && (\n              <div>\n                <div className=\"house-crest ravenclaw-crest\"/>\n                <p className=\"house-description ravenclaw-description\">\n                  Ravenclaw values intelligence, creativity, learning, and wit.\n                </p>\n              </div>\n            )}\n            {this.props.result === \"Slytherin\" && (\n              <div>\n                <div className=\"house-crest slytherin-crest\"/>\n                <p className=\"house-description slytherin-description \">\n                  Slytherin values ambition, cunning, leadership, and resourcefulness.\n                </p>\n              </div>\n            )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Result;","var quizQuestions = [\n  {\n    question: \"Given the choice, would you rather invent a potion that would guarantee you:\",\n    answers: [\n        {\n            type: \"Gryffindor\",\n            content: \"Glory\"\n        },\n        {\n            type: \"Ravenclaw\",\n            content: \"Wisdom\"\n        },\n        {\n            type: \"Hufflepuff\",\n            content: \"Love\"\n        },\n        {\n            type: \"Slytherin\",\n            content: \"Power\"\n        }\n    ]\n  },\n  {\n    question: \"Which road tempts you most?\",\n    answers: [\n      {\n          type: \"Slytherin\",\n          content: \"The twisting, leaf-strewn path through woods\"\n      },\n      {\n        type: \"Hufflepuff\",\n        content: \"The wide, sunny, grassy lane\"\n      },\n      {\n        type: \"Ravenclaw\",\n        content: \"The cobbled street lined with ancient buildings\"\n      },\n      {\n        type: \"Gryffindor\",\n        content: \"The narrow, dark, lantern-lit alley\"\n      },\n    ]\n  },\n  {\n    question: \"You enter an enchanted garden. What would you be most curious to examine first?\",\n    answers: [\n        {\n          type: \"Hufflepuff\",\n          content: \"The fat red toadstools that appear to be talking to each other\"\n        },\n        {\n            type: \"Slytherin\",\n            content: \"The silver leafed tree bearing golden apples\"\n        },\n        {\n            type: \"Gryffindor\",\n            content: \"The bubbling pool, in the depths of which something luminous is swirling\"\n        },\n        {\n          type: \"Ravenclaw\",\n          content: \"The statue of an old wizard with a strangely twinkling eye\"\n        }\n    ]\n  },\n  {\n    question: \"Once every century, the Flutterby bush produces flowers that adapt their scent to attract the unwary. If it lured you, it would smell of:\",\n    answers: [\n        {\n          type: \"Ravenclaw\",\n          content: \"Fresh parchment\"\n        },\n        {\n          type: \"Gryffindor\",\n          content: \"A crackling log fire\"\n        },\n        {\n          type: \"Hufflepuff\",\n          content: \"Home\"\n        },\n        {\n          type: \"Slytherin\",\n          content: \"The Sea\"\n      }\n    ]\n  },\n  {\n    question: \"You and two friends need to cross a bridge guarded by a river troll who insists on fighting one of you before he will let all of you pass. Do you:\",\n    answers: [\n        {\n          type: \"Slytherin\",\n          content: \"Suggest that all three of you should fight (without telling the troll.\"\n        },\n        {\n          type: \"Ravenclaw\",\n          content: \"Suggest drawing lots to decide which of you will fight.\"\n        },\n        {\n            type: \"Hufflepuff\",\n            content: \"Attempt to confuse the troll into letting all three of you pass without fighting.\"\n        },\n        {\n          type: \"Gryffindor\",\n          content: \"Volunteer to fight.\"\n        }\n    ]\n  }, \n  {\n    question: \"After you have died, what would you most like people to do when they hear your name?\",\n    answers: [\n        {\n          type: \"Hufflepuff\",\n          content: \"Miss you, but smile\"\n        },\n        {\n          type: \"Ravenclaw\",\n          content: \"Ask for more stories about your adventures.\"\n        },\n        {\n            type: \"Gryffindor\",\n            content: \"Think with admiration of you achievements.\"\n        },\n        {\n          type: \"Slytherin\",\n          content: \"I don't care what people think of me after I'm dead; it's what they think of me while I'm alive that counts.\"\n        }\n      ]\n    }, \n    {\n      question: \"Dawn or Dusk?\",\n      answers: [\n        {\n          type: \"Gryffindor\",\n          content: \"Dawn\"\n        },\n        {\n          type: \"Ravenclaw\",\n          content: \"Dusk\"\n        },\n      ]\n    }, \n    {\n      question: \"Black or White?\",\n      answers: [\n        {\n            type: \"Slytherin\",\n            content: \"Black\"\n        },\n        {\n          type: \"Hufflepuff\",\n          content: \"White\"\n        }\n      ]\n    }, \n    {\n      question: \"Forest or River?\",\n      answers: [\n        {\n            type: \"Slytherin\",\n            content: \"Forest\"\n        },\n        {\n          type: \"Ravenclaw\",\n          content: \"River\"\n        }\n      ]\n    }, \n    {\n      question: \"Moon or Stars?\",\n      answers: [\n        {\n            type: \"Hufflepuff\",\n            content: \"Moon\"\n        },\n        {\n          type: \"Gryffindor\",\n          content: \"Stars\"\n        }\n      ]\n    }, \n];\n\nexport default quizQuestions;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Quiz from './components/Quiz'\nimport Result from './components/Result'\nimport quizQuestions from './data/quizQuestions'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      counter: 0,\n      questionId: 1,\n      question: '',\n      answerOptions: [],\n      answer: '',\n      answersCount: {\n        Gryffindor: 0,\n        Slytherin: 0,\n        Ravenclaw: 0,\n        Hufflepuff: 0,\n      },\n      result: ''\n    };\n\n    this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n  }\n\n  componentDidMount() {\n    const answers = quizQuestions.map((question) => question.answers);  \n  \n    this.setState({\n      question: quizQuestions[0].question,\n      answerOptions: answers[0]\n    });\n  }\n\n  handleAnswerSelected(e) {\n    this.setUserAnswer(e.currentTarget.value);\n    if (this.state.questionId < quizQuestions.length) {\n        setTimeout(() => this.setNextQuestion(), 300);\n      } else {\n        setTimeout(() => this.setResults(this.getResults()), 500);\n      }\n  }\n\n  setUserAnswer(answer) {\n    this.setState((state) => ({\n      answersCount: {\n        ...state.answersCount,\n        [answer]: (state.answersCount[answer] || 0) + 1\n      },\n      answer: answer\n    }));\n  }\n\n  setNextQuestion() {\n    const counter = this.state.counter + 1;\n    const questionId = this.state.questionId + 1;\n    this.setState({\n      counter: counter,\n      questionId: questionId,\n      question: quizQuestions[counter].question,\n      answerOptions: quizQuestions[counter].answers,\n      answer: ''\n    });\n  }\n\n  getResults() {\n    const answersCount = this.state.answersCount;\n    const answersCountKeys = Object.keys(answersCount);\n    const answersCountValues = answersCountKeys.map((key) => answersCount[key]);\n    const maxAnswerCount = Math.max.apply(null, answersCountValues);\n  \n    const filteredKey = answersCountKeys.filter((key) => answersCount[key] === maxAnswerCount);\n    return filteredKey\n  }\n\n  setResults (result) {\n    if (result.length === 1) {\n      this.setState({ result: result[0] });\n    } else {\n      this.setState({ result: result[Math.floor(Math.random() * result.length)]});\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.result ? (\n          <Result result={this.state.result}/>\n        ) : (\n          <Quiz\n            answer={this.state.answer}\n            answerOptions={this.state.answerOptions}\n            questionId={this.state.questionId}\n            question={this.state.question}\n            questionTotal={quizQuestions.length}\n            onAnswerSelected={this.handleAnswerSelected}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App;\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}